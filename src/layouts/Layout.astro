---
import '@fontsource/space-grotesk';
import '@fortawesome/fontawesome-free/css/all.min.css';
import 'aos/dist/aos.css';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Olivier Tina's Portfolio - Data Scientist" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
  </head>
  <body class="font-space-grotesk bg-slate-900 text-white">
    <div id="particles-js" class="fixed inset-0 z-0 opacity-50"></div>
    <div class="relative z-10">
      <slot />
    </div>

    <script is:inline src="https://unpkg.com/aos@2.3.4/dist/aos.js"></script>
    <script is:inline src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
    <script is:inline src="https://cdn.jsdelivr.net/npm/typed.js@2.0.12"></script>

    <script is:inline>
      window.addEventListener('load', () => {
        AOS.init({
          duration: 1000,
          once: false,
          mirror: true
        });

        particlesJS('particles-js', {
          particles: {
            number: { value: 100, density: { enable: true, value_area: 800 } },
            color: { value: ['#4f46e5', '#06b6d4'] },
            shape: { type: 'circle' },
            opacity: { value: 0.6, random: true },
            size: { value: 3, random: true },
            line_linked: {
              enable: true,
              distance: 150,
              color: '#4f46e5',
              opacity: 0.2,
              width: 1
            },
            move: {
              enable: true,
              speed: 3,
              direction: 'none',
              random: true,
              straight: false,
              out_mode: 'out',
              bounce: false,
              attract: { enable: true, rotateX: 600, rotateY: 1200 }
            }
          },
          interactivity: {
            detect_on: 'canvas',
            events: {
              onhover: { enable: true, mode: 'repulse' },
              onclick: { enable: true, mode: 'push' },
              resize: true
            },
            modes: {
              repulse: { distance: 100, duration: 0.4 },
              push: { particles_nb: 4 }
            }
          },
          retina_detect: true
        });

        new Typed('#typed-text', {
          strings: [
            'Data Scientist',
            'Machine Learning Engineer',
            'Deep Learning Specialist',
            'Big Data Engineer'
          ],
          typeSpeed: 50,
          backSpeed: 30,
          loop: true,
          backDelay: 1500
        });
      });
    </script>
  </body>
</html>

<style is:global>
  :root {
    --gradient-start: #4f46e5;
    --gradient-end: #06b6d4;
  }

  html {
    scroll-behavior: smooth;
  }
  
  .glass-card {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 1rem;
    transition: all 0.3s ease;
  }

  .glass-card:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(255, 255, 255, 0.2);
    box-shadow: 0 0 20px rgba(79, 70, 229, 0.3);
  }

  .gradient-text {
    background: linear-gradient(45deg, var(--gradient-start), var(--gradient-end));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 200%;
    animation: gradient 5s ease infinite;
  }

  .gradient-border {
    position: relative;
    border: 2px solid transparent;
    background: linear-gradient(45deg, var(--gradient-start), var(--gradient-end)) border-box;
    -webkit-mask:
      linear-gradient(#fff 0 0) padding-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: destination-out;
    mask-composite: exclude;
  }

  @keyframes gradient {
    0% { background-position: 0% 50% }
    50% { background-position: 100% 50% }
    100% { background-position: 0% 50% }
  }

  .floating {
    animation: floating 3s ease-in-out infinite;
  }

  @keyframes floating {
    0% { transform: translateY(0px) }
    50% { transform: translateY(-20px) }
    100% { transform: translateY(0px) }
  }

  .project-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .project-card {
    position: relative;
    overflow: hidden;
    border-radius: 1rem;
  }

  .project-card img {
    transition: transform 0.5s ease;
  }

  .project-card:hover img {
    transform: scale(1.05);
  }

  .project-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(to top, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0.2) 100%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .project-card:hover .project-overlay {
    opacity: 1;
  }
</style></content>